services:
  goblog:
    image: goblog
    container_name: goblog
    restart: always
    ports:
      - 8000:8000
    networks:
      - monitoring
    volumes:
      - ./database/:/app/database/
      - ./uploads/:/app/uploads
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    user: "0"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus_data/:/prometheus/
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    ports:
      - 9090:9090
    networks:
      - monitoring
  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    restart: always
    user: "0"
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PANELS_DISABLE_SANITIZE_HTML=true
      - GF_SECURITY_ALLOW_EMBEDDING=true
    networks:
      - monitoring
    volumes:
      - ./grafana_data/:/var/lib/grafana/

  cloudpub:
    image: cloudpub/cloudpub:latest
    network_mode: host
    environment:
      - TOKEN=&{CLOUDPUB_TOKEN}
    command: publish http 8000
    volumes:
      - cloudpub-config:/home/cloudpub

volumes:
  cloudpub-config: {}

networks:
  monitoring:
    driver: bridge
